n=2^16
sigma=0.5
mu=c(rep(3,n/4), rep(5, n/4), rep(6, n/4), rep(3, n/4))
x = rpois(n,exp(mu+rnorm(n,0,sigma)))

#fit1=smash.poiss(x)
fit2=smash.gen.poiss(x)



plot(x,col='grey80')
#lines(fit1)
lines(fit2$lambda.est,col=4)
lines(exp(mu),col=3)
fit2$nugget.est



library(stm)
set.seed(123)
n = 120
p = 256
K= 3
FF = matrix(1, nrow=p, ncol=K)
FF[(p/8*1):(p/8*2),1] = 5
FF[(p/8*3):(p/8*4),2] = 5
FF[(p/8*5):(p/8*7),3] = 5
L = matrix(rgamma(n*K,2),ncol=K)
y = matrix(rpois(n*p,tcrossprod(L,FF)),nrow=n)
fit.sgom = cluster.mix(y,K=3,tol=1e-3,maxit = 100,nugget = T)

ploter = function(EF,main){
  par(mfrow=c(3,1))
  for(k in 1:ncol(EF)){
    plot(EF[,k],ylab=paste('f',k,sep=''),main=ifelse(k==1,main,""),type='l')
  }
}

ploter(t(fit.sgom$phi),main='sgom')



X_init_fit = nnmf(y,3,method='lee',
                        loss='mse',show.warning = F,
                        init = list(H=t(FF)),
                        verbose = F,max.iter = 50)

plot(X_init_fit$H[1,])
plot(X_init_fit$H[2,])
plot(X_init_fit$H[3,])

plot(X_init_fit$W[,1])
plot(X_init_fit$W[,2])
plot(X_init_fit$W[,3]/sum(X_init_fit$W[,3]))

plot(L[,3]/sum(L[,3]))

out = stm(y,K=3,init='lee')
